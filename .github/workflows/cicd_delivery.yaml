name: Behave CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  behave-tests:
    runs-on: ubuntu-latest  # Setup simple OS (Linux)

    steps:
      # Step 1: Checkout repository
      - name: Checkout source code
        uses: actions/checkout@v3

      # Step 2: Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install behave boto3  # Add additional packages as needed

#      # Step 4: Extract additional repositories (optional)
#      - name: Clone additional test scripts
#        run: |
#          git clone https://github.com/example/test-scripts.git  # Update with your repository URL

      # Step 5: Run Behave tests
      - name: Execute Behave tests
        run: |
          behave features/ --junit --junit-directory=behave-results

      # Step 6: Upload test results
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: behave-test-results
          path: behave-results/

      # Step 7: Report test issues (if any)
      - name: Annotate test failures
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const resultsPath = path.join('behave-results', 'TESTS-Behave.xml');
            const results = fs.readFileSync(resultsPath, 'utf8');
            core.setFailed(`Test Failures Detected:\n${results}`);

      # Step 8: Extract targeted files to cloud (e.g., AWS S3)
      - name: Upload files to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: ./target-directory/  # Replace with your source directory

      # Step 9: Download as zip file and store in current action run
      - name: Zip and save files
        run: |
          zip -r target-files.zip ./target-directory/
          mv target-files.zip $GITHUB_WORKSPACE/

      - name: Upload zipped file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: zipped-target-files
          path: target-files.zip
